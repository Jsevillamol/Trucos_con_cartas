typedef enum tJugador
{
	Jugador,
	Automata
};
int opciones_de_blackjack()
{
	cout << "Que decides hacer?:" << endl
	     << "1 - Pedir"           << endl
	     << "2 - Plantarse"       << endl
		 << "3 - Doblar apuesta"  << endl
		 << "4 - Dividir "        << endl
		 << "0 - Abandonar"       << endl;
		 
	return digitoEntre(0,4);
}

tMazo repartir_n_cartas(tMazo &mazo, tMazo mazoJugador, int cuantasQuieres)
{
	mazo.cuantas == (cuantasQuieres + 1);
	
	mazoJugador += mazo;

	return mazoJugador;
}

int apuesta()
{
	cout << "Cuanto quieres apostar?" << endl;
	
	return digitoEntre(APU_MIN,APU_MAX);
}

void blackjack()
{
	tJugador turno;
	tMazo mazoJugador, mazoBot, mazoJug1, mazoJug2;
	int queHacer, dinero = DINERO_INI, apu = apuesta();
	
	cargar_mazo_completo();
	barajar(mazo);
	
	repartir_n_cartas(mazo, mazoJugador, 2);
	repartir_n_cartas(mazo, mazoBot, 2);
	
	cout << "Carta del crupier:" << endl;
	mostrar(mazoBot.carta[1]);
	
	cout << "Mano actual:" << endl;
	mostrar(mazoJugador);
	
	apu;
	dinero -= apu;
	
	if (turno == Jugador)
	{
		do
		{
			queHacer = opciones_de_blackjack();
			
			if      (queHacer == 1)
			{
				repartir_n_cartas(mazo, mazoJugador, 1);
				
				cout << "Mano actual:" << endl;
				mostrar(mazoJugador);
				
				turno == Automata;
			}
			else if (queHacer == 2)
			{
				turno == Automata;
			}
			else if (queHacer == 3)
			{
				if (mazoJugador.cartas > 2)
				{
					cout << "Error, no puedes doblar la apuesta si ya has pedido otra carta" << endl;
				}
				else 
				{
					apu *= 2;
					dinero -= (apu/2);
				}
				turno == Automata;
			}
			else if (queHacer == 4)
			{
				if (mazoJugador.cartas > 2)
				{
					cout << "Error, no puedes dividir la mano si ya has pedido otra carta" << endl;
				}
				else if (mazoJugador.cartas[0] != mazoJugador.cartas[1])
				{
					cout << "Error, no puedes dividir la mano si tus dos cartas no son iguales" << endl;
				}
				else
				{
					mazoJug1.cartas[0] = mazoJugador.cartas[0];
					mazoJug2.cartas[0] = mazoJugador.cartas[1];
						
					repartir_n_cartas(mazo, mazoJug1, 1);				
					repartir_n_cartas(mazo, mazoJug2, 1);
					
					apu *= 2;
				}
				turno == Automata;
			}
		}
		while (queHacer == 0)
		{
			cout << "Abandonas? Ohhh" << endl;
			
			turno == Automata
		}		
	}
	else if (turno == Automata)
	{
		
	}
}
